name: ci

on:
  push:
    branches:
      - "**"
    tags:
      - "v*.*.*"
  pull_request:
    branches:
      - "main"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: bahmutov/npm-install@v1
      - name: Eslint
        run: yarn lint
        env:
          CI: true
      # - name: Unit Test
      #   run: yarn test --coverage
      #   env:
      #     NODE_ENV: test

  docker:
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ${{ secrets.ALI_REGISTRY }}/adventurer/www-web
          # generate Docker tags based on the following events/attributes
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login aliyun
        uses: aliyun/acr-login@v1
        with:
          login-server: "${{ secrets.ALI_REGISTRY }}"
          username: "${{ secrets.ALI_USERNAME }}"
          password: "${{ secrets.ALI_PASSWORD }}"
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    needs: [docker]
    runs-on: ubuntu-latest
    env:
      NS_PREFIX: adv-tech-pr
      NS: adv-uat
      DEVOPS_ORG_NAME: 36node
      DEVOPS_REPO_NAME: z-ctyun-devops
      ORG_NAME: adventurer-tech
      REPO_NAME: hall
    steps:
      - name: deploy uat
        if: github.ref == 'refs/heads/main'
        env:
          URL: https://api.github.com/repos/${{ env.DEVOPS_ORG_NAME }}/${{ env.DEVOPS_REPO_NAME }}/dispatches
        uses: fjogeleit/http-request-action@master
        with:
          url: ${{ env.URL }}
          method: "POST"
          customHeaders: '{"Accept":"application/vnd.github.v3+json","Authorization":"token ${{ secrets.PR_TOKEN }}"}'
          data: '{"event_type":"main-deploy","client_payload":{"namespace":"${{ env.NS }}","repo":"${{ env.REPO_NAME }}"}}'
      - name: deploy pr
        if: github.event_name == 'pull_request'
        env:
          URL: https://api.github.com/repos/${{ env.DEVOPS_ORG_NAME }}/${{ env.DEVOPS_REPO_NAME }}/dispatches
          LABEL: ${{ env.REPO_NAME }}-${{ github.event.pull_request.number}}
          NAMESPACE: ${{ env.NS_PREFIX }}-${{ env.REPO_NAME }}-${{ github.event.pull_request.number}}
          DEPLOY_URL_PREFIX: ${{ env.REPO_NAME }}.${{ env.NS_PREFIX }}-${{ env.REPO_NAME }}-${{ github.event.pull_request.number}}
          DEPLOY_URL_SUFFIX: ""
          PR_OPEN: ${{ github.event.action == 'opened' }}
        uses: fjogeleit/http-request-action@master
        with:
          url: ${{ env.URL }}
          method: "POST"
          customHeaders: '{"Accept":"application/vnd.github.v3+json","Authorization":"token ${{ secrets.PR_TOKEN }}"}'
          data: '{"event_type":"pr-deploy","client_payload":{"ns_prefix":"${{ env.NS_PREFIX }}","label":"${{ env.LABEL }}","namespace":"${{ env.NAMESPACE }}","deploy_url_prefix":"${{ env.DEPLOY_URL_PREFIX }}","deploy_url_suffix":"${{ env.DEPLOY_URL_SUFFIX }}","org":"${{ env.ORG_NAME }}","repo":"${{ env.REPO_NAME }}","number":"${{ github.event.pull_request.number }}","tag":"pr-${{ github.event.pull_request.number }}","open":${{ env.PR_OPEN }}}}'
